function X(e, t, i) {
  let n = "";
  const o = e.x.translate / t.x, $ = e.y.translate / t.y, s = (i == null ? void 0 : i.z) || 0;
  if ((o || $ || s) && (n = `translate3d(${o}px, ${$}px, ${s}px) `), (t.x !== 1 || t.y !== 1) && (n += `scale(${1 / t.x}, ${1 / t.y}) `), i) {
    const { transformPerspective: f, rotate: p, rotateX: y, rotateY: a, skewX: g, skewY: r } = i;
    f && (n = `perspective(${f}px) ${n}`), p && (n += `rotate(${p}deg) `), y && (n += `rotateX(${y}deg) `), a && (n += `rotateY(${a}deg) `), g && (n += `skewX(${g}deg) `), r && (n += `skewY(${r}deg) `);
  }
  const x = e.x.scale * t.x, c = e.y.scale * t.y;
  return (x !== 1 || c !== 1) && (n += `scale(${x}, ${c})`), n || "none";
}
export {
  X as buildProjectionTransform
};
